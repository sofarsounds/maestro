// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar <CollapseIcon /> renders correctly in closed state 1`] = `
.c2 {
  display: block;
  position: absolute;
  height: 2px;
  width: 20px;
  background: #fff;
  border-radius: 1px;
  -webkit-transition: all 0.15s cubic-bezier(.25,.73,.85,.56);
  transition: all 0.15s cubic-bezier(.25,.73,.85,.56);
  opacity: 1;
  left: 5px;
}

.c0 {
  width: 30px;
  height: 30px;
  position: relative;
  cursor: pointer;
  box-sizing: content-box;
}

.c0 .c1:nth-child(1) {
  top: 12px;
}

.c0 .c1:nth-child(2) {
  top: 17px;
}

@media (min-width:768px) {
  .c0 {
    display: none;
  }
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
      },
      "colours": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": "96px",
        "h2": "60px",
        "h3": "48px",
        "h4": "34px",
        "h5": "24px",
        "h6": "20px",
        "overline": "10px",
        "subtitle1": "16px",
        "subtitle2": "14px",
        "title": "54px",
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
    }
  }
>
  <CollapsibleIcon
    onClick={[MockFunction]}
  >
    <styled.div
      onClick={[MockFunction]}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  width: ",
                "30",
                "px;
  height: ",
                "30",
                "px;
  position: relative;
  cursor: pointer;
  box-sizing: content-box;

  ",
                [Function],
                "

  ",
                ".c1",
                ":nth-child(1) {
    top: ",
                "12",
                "px;
  }

  ",
                ".c1",
                ":nth-child(2) {
    top: ",
                "17",
                "px;
  }

  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        onClick={[MockFunction]}
      >
        <div
          className="c0"
          onClick={[MockFunction]}
        >
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c1",
                    "isStatic": true,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  display: block;
  position: absolute;
  height: 2px;
  width: 20px;
  background: #fff;
  border-radius: 1px;
  transition: all ",
                      "0.15s",
                      " ",
                      "cubic-bezier(.25, .73, .85, .56)",
                      ";
  opacity: 1;
  left: 5px;
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c1",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1 c2"
              />
            </StyledComponent>
          </styled.span>
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c1",
                    "isStatic": true,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  display: block;
  position: absolute;
  height: 2px;
  width: 20px;
  background: #fff;
  border-radius: 1px;
  transition: all ",
                      "0.15s",
                      " ",
                      "cubic-bezier(.25, .73, .85, .56)",
                      ";
  opacity: 1;
  left: 5px;
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c1",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1 c2"
              />
            </StyledComponent>
          </styled.span>
        </div>
      </StyledComponent>
    </styled.div>
  </CollapsibleIcon>
</ThemeProvider>
`;

exports[`Navbar <CollapseIcon /> renders correctly when in open state 1`] = `
.c2 {
  display: block;
  position: absolute;
  height: 2px;
  width: 20px;
  background: #fff;
  border-radius: 1px;
  -webkit-transition: all 0.15s cubic-bezier(.25,.73,.85,.56);
  transition: all 0.15s cubic-bezier(.25,.73,.85,.56);
  opacity: 1;
  left: 5px;
}

.c3 .c1:nth-child(1) {
  top: 12px;
}

.c3 .c1:nth-child(2) {
  top: 17px;
}

.c0 {
  width: 30px;
  height: 30px;
  position: relative;
  cursor: pointer;
  box-sizing: content-box;
}

.c0 .c1:nth-child(1) {
  top: 12px;
}

.c0 .c1:nth-child(2) {
  top: 17px;
}

.c0 .c1:nth-child(1) {
  top: 15px;
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-animation: hlISQX 0.15s cubic-bezier(.25,.73,.85,.56) .25s 1 normal forwards;
  animation: hlISQX 0.15s cubic-bezier(.25,.73,.85,.56) .25s 1 normal forwards;
}

.c0 .c1:nth-child(2) {
  top: 15px;
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-animation: dKjVdb 0.15s cubic-bezier(.25,.73,.85,.56) .25s 1 normal forwards;
  animation: dKjVdb 0.15s cubic-bezier(.25,.73,.85,.56) .25s 1 normal forwards;
}

@media (min-width:768px) {
  .c0 {
    display: none;
  }
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
      },
      "colours": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": "96px",
        "h2": "60px",
        "h3": "48px",
        "h4": "34px",
        "h5": "24px",
        "h6": "20px",
        "overline": "10px",
        "subtitle1": "16px",
        "subtitle2": "14px",
        "title": "54px",
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
    }
  }
>
  <CollapsibleIcon
    onClick={[MockFunction]}
    open={true}
  >
    <styled.div
      onClick={[MockFunction]}
      open={true}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  width: ",
                "30",
                "px;
  height: ",
                "30",
                "px;
  position: relative;
  cursor: pointer;
  box-sizing: content-box;

  ",
                [Function],
                "

  ",
                ".c1",
                ":nth-child(1) {
    top: ",
                "12",
                "px;
  }

  ",
                ".c1",
                ":nth-child(2) {
    top: ",
                "17",
                "px;
  }

  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        onClick={[MockFunction]}
        open={true}
      >
        <div
          className="c0"
          onClick={[MockFunction]}
          open={true}
        >
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c1",
                    "isStatic": true,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  display: block;
  position: absolute;
  height: 2px;
  width: 20px;
  background: #fff;
  border-radius: 1px;
  transition: all ",
                      "0.15s",
                      " ",
                      "cubic-bezier(.25, .73, .85, .56)",
                      ";
  opacity: 1;
  left: 5px;
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c1",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1 c2"
              />
            </StyledComponent>
          </styled.span>
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c1",
                    "isStatic": true,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  display: block;
  position: absolute;
  height: 2px;
  width: 20px;
  background: #fff;
  border-radius: 1px;
  transition: all ",
                      "0.15s",
                      " ",
                      "cubic-bezier(.25, .73, .85, .56)",
                      ";
  opacity: 1;
  left: 5px;
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c1",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c1 c2"
              />
            </StyledComponent>
          </styled.span>
        </div>
      </StyledComponent>
    </styled.div>
  </CollapsibleIcon>
</ThemeProvider>
`;
