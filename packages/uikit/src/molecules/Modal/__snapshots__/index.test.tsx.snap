// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Modal /> When isShowing is false matches the snapshot 1`] = `
<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
      },
      "colours": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": "96px",
        "h2": "60px",
        "h3": "48px",
        "h4": "34px",
        "h5": "24px",
        "h6": "20px",
        "overline": "10px",
        "subtitle1": "16px",
        "subtitle2": "14px",
        "title": "54px",
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
    }
  }
>
  <Component
    hide={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    isShowing={false}
  />
</ThemeProvider>
`;

exports[`<Modal /> When isShowing is true matches the snapshot 1`] = `
.c4 {
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 600;
  height: 44px;
  -webkit-letter-spacing: 0.8px;
  -moz-letter-spacing: 0.8px;
  -ms-letter-spacing: 0.8px;
  letter-spacing: 0.8px;
  outline: none;
  padding: 0 25px;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: uppercase;
  background: #039842;
  border: 1px solid #039842;
  color: #FFFFFF;
  background: #FFFFFF;
  color: #039842;
  background: #FFFFFF;
  border-color: #FFFFFF;
  color: #039842;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:hover {
  background-color: #006721;
}

.c4:focus {
  background-color: #039842;
}

.c4:disabled {
  background-color: #949494;
  border-color: #949494;
}

.c4:hover {
  border-color: #006721;
  color: #006721;
  background-color: #FFFFFF;
}

.c4:focus {
  background-color: #E6F7EA;
}

.c4:disabled {
  background-color: #FFFFFF;
  color: #949494;
}

.c4:hover {
  color: #006721;
  border-color: #FFFFFF;
}

.c4:focus {
  background-color: #E6F7EA;
  border-color: #E6F7EA;
}

.c4:disabled {
  background-color: #FFFFFF;
  border-color: #FFFFFF;
}

.c0 {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1040;
  opacity: 0.5;
  background-color: #000;
}

.c1 {
  display: inline-table;
  position: fixed;
  padding: 0.5rem;
  top: 0;
  left: 0;
  z-index: 1050;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
}

.c2 {
  z-index: 100;
  background: white;
  margin: 1.75rem 1rem;
  position: fixed;
  left: 0;
  top: 0;
  margin: 0;
  width: 100%;
  height: 100vh;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c5 {
  pointer-events: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0.5rem 1rem;
  min-height: 250px;
}

@media (min-width:768px) {
  .c2 {
    border-radius: 3px;
    position: relative;
    margin: 1.75rem auto;
    width: 100%;
    left: auto;
    top: auto;
    min-height: 200px;
    height: auto;
  }
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
      },
      "colours": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": "96px",
        "h2": "60px",
        "h3": "48px",
        "h4": "34px",
        "h5": "24px",
        "h6": "20px",
        "overline": "10px",
        "subtitle1": "16px",
        "subtitle2": "14px",
        "title": "54px",
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
    }
  }
>
  <Component
    hide={[MockFunction]}
    isShowing={true}
  >
    <Portal
      containerInfo={
        .c4 {
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 600;
  height: 44px;
  -webkit-letter-spacing: 0.8px;
  -moz-letter-spacing: 0.8px;
  -ms-letter-spacing: 0.8px;
  letter-spacing: 0.8px;
  outline: none;
  padding: 0 25px;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-transform: uppercase;
  background: #039842;
  border: 1px solid #039842;
  color: #FFFFFF;
  background: #FFFFFF;
  color: #039842;
  background: #FFFFFF;
  border-color: #FFFFFF;
  color: #039842;
}

.c4:disabled {
  cursor: not-allowed;
  pointer-events: none;
}

.c4:hover {
  background-color: #006721;
}

.c4:focus {
  background-color: #039842;
}

.c4:disabled {
  background-color: #949494;
  border-color: #949494;
}

.c4:hover {
  border-color: #006721;
  color: #006721;
  background-color: #FFFFFF;
}

.c4:focus {
  background-color: #E6F7EA;
}

.c4:disabled {
  background-color: #FFFFFF;
  color: #949494;
}

.c4:hover {
  color: #006721;
  border-color: #FFFFFF;
}

.c4:focus {
  background-color: #E6F7EA;
  border-color: #E6F7EA;
}

.c4:disabled {
  background-color: #FFFFFF;
  border-color: #FFFFFF;
}

.c0 {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1040;
  opacity: 0.5;
  background-color: #000;
}

.c1 {
  display: inline-table;
  position: fixed;
  padding: 0.5rem;
  top: 0;
  left: 0;
  z-index: 1050;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
}

.c2 {
  z-index: 100;
  background: white;
  margin: 1.75rem 1rem;
  position: fixed;
  left: 0;
  top: 0;
  margin: 0;
  width: 100%;
  height: 100vh;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c5 {
  pointer-events: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0.5rem 1rem;
  min-height: 250px;
}

@media (min-width:768px) {
  .c2 {
    border-radius: 3px;
    position: relative;
    margin: 1.75rem auto;
    width: 100%;
    left: auto;
    top: auto;
    min-height: 200px;
    height: auto;
  }
}

<body>
          <div
            class="c0"
          />
          <div
            class="c1"
          >
            <div
              class="c2"
            >
              <div
                class="c3"
              >
                <button
                  class="c4"
                >
                  X
                </button>
              </div>
              <div
                class="c5"
              >
                Some children
              </div>
            </div>
          </div>
        </body>
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ksYbfQ",
                "isStatic": true,
                "lastClassName": "c0",
                "rules": Array [
                  "
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1040;
  opacity: 0.5;
  background-color: #000;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ksYbfQ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          />
        </StyledComponent>
      </styled.div>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-hmzhuo",
                "isStatic": true,
                "lastClassName": "c1",
                "rules": Array [
                  "
  display: inline-table;
  position: fixed;
  padding: 0.5rem;
  top: 0;
  left: 0;
  z-index: 1050;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  outline: 0;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-hmzhuo",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c1"
          >
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-frDJqD",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "
  ",
                        [Function],
                        "
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-frDJqD",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c2"
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kvZOFW",
                            "isStatic": true,
                            "lastClassName": "c3",
                            "rules": Array [
                              "
  display: flex;
  width: 100%;
  justify-content: flex-end;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kvZOFW",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c3"
                      >
                        <Styled(Styled(Styled(styled.button)))
                          onClick={[Function]}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "
  ",
                                    [Function],
                                    "
",
                                    "
  ",
                                    [Function],
                                    "
",
                                    "
  ",
                                    [Function],
                                    "
",
                                    "
  ",
                                    [Function],
                                    ";
",
                                  ],
                                },
                                "displayName": "Styled(Styled(Styled(styled.button)))",
                                "foldedComponentIds": Array [
                                  "sc-bwzfXH",
                                  "sc-htpNat",
                                  "sc-bxivhb",
                                ],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "button",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <button
                              className="c4"
                              onClick={[Function]}
                            >
                              X
                            </button>
                          </StyledComponent>
                        </Styled(Styled(Styled(styled.button)))>
                      </div>
                    </StyledComponent>
                  </styled.div>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-hqyNC",
                            "isStatic": true,
                            "lastClassName": "c5",
                            "rules": Array [
                              "
  pointer-events: auto;
  display: flex;
  padding: 0.5rem 1rem;
  min-height: 250px;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-hqyNC",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c5"
                      >
                        Some children
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </Portal>
  </Component>
</ThemeProvider>
`;
