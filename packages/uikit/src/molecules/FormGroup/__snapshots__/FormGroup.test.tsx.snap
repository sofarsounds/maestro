// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FormGroup /> applies a hasError prop to the input 1`] = `
.c2 {
  font-size: 10px;
  font-weight: normal;
  -webkit-letter-spacing: 0.3px;
  -moz-letter-spacing: 0.3px;
  -ms-letter-spacing: 0.3px;
  letter-spacing: 0.3px;
  color: #111111;
  margin: 0;
  padding: 0;
  color: #EF4423;
}

.c0 {
  font-size: 14px;
  font-weight: bold;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  margin-bottom: 8px;
  display: block;
}

.c1 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  border-color: #EF4423;
}

.c1:hover {
  border-color: #949494;
}

.c1:focus {
  border-color: #111111;
}

.c1:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

@media (min-width:768px) {
  .c2 {
    font-size: 10px;
  }
}

@media (min-width:992px) {
  .c2 {
    font-size: 10px;
  }
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "input": "2px",
      },
      "colours": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": "96px",
        "h2": "60px",
        "h3": "48px",
        "h4": "34px",
        "h5": "24px",
        "h6": "20px",
        "overline": "10px",
        "subtitle1": "16px",
        "subtitle2": "14px",
        "title": "74px",
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
    }
  }
>
  <FormGroup
    errorMsg="Something went wrong"
    label="An error field"
    required={true}
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jTzLTM",
              "isStatic": true,
              "lastClassName": "eCMmlJ",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jTzLTM",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-VigVT",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-VigVT",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
              >
                An error field
                 
                *
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={true}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fjdhpX",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-fjdhpX",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={true}
              placeholder="Test Input"
            >
              <input
                className="c1"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
          <styled.span
            colour="#EF4423"
          >
            <StyledComponent
              colour="#EF4423"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c2"
              >
                Something went wrong
              </span>
            </StyledComponent>
          </styled.span>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;

exports[`<FormGroup /> renders a error message 1`] = `
.c2 {
  font-size: 10px;
  font-weight: normal;
  -webkit-letter-spacing: 0.3px;
  -moz-letter-spacing: 0.3px;
  -ms-letter-spacing: 0.3px;
  letter-spacing: 0.3px;
  color: #111111;
  margin: 0;
  padding: 0;
  color: #EF4423;
}

.c0 {
  font-size: 14px;
  font-weight: bold;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  margin-bottom: 8px;
  display: block;
}

.c1 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  border-color: #EF4423;
}

.c1:hover {
  border-color: #949494;
}

.c1:focus {
  border-color: #111111;
}

.c1:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

@media (min-width:768px) {
  .c2 {
    font-size: 10px;
  }
}

@media (min-width:992px) {
  .c2 {
    font-size: 10px;
  }
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "input": "2px",
      },
      "colours": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": "96px",
        "h2": "60px",
        "h3": "48px",
        "h4": "34px",
        "h5": "24px",
        "h6": "20px",
        "overline": "10px",
        "subtitle1": "16px",
        "subtitle2": "14px",
        "title": "74px",
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
    }
  }
>
  <FormGroup
    errorMsg="Something went wrong"
    label="An error field"
    required={true}
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jTzLTM",
              "isStatic": true,
              "lastClassName": "eCMmlJ",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jTzLTM",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-VigVT",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-VigVT",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
              >
                An error field
                 
                *
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={true}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fjdhpX",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-fjdhpX",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={true}
              placeholder="Test Input"
            >
              <input
                className="c1"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
          <styled.span
            colour="#EF4423"
          >
            <StyledComponent
              colour="#EF4423"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c2"
              >
                Something went wrong
              </span>
            </StyledComponent>
          </styled.span>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;

exports[`<FormGroup /> renders a required indicator 1`] = `
.c0 {
  font-size: 14px;
  font-weight: bold;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  margin-bottom: 8px;
  display: block;
}

.c1 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
}

.c1:hover {
  border-color: #949494;
}

.c1:focus {
  border-color: #111111;
}

.c1:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "input": "2px",
      },
      "colours": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": "96px",
        "h2": "60px",
        "h3": "48px",
        "h4": "34px",
        "h5": "24px",
        "h6": "20px",
        "overline": "10px",
        "subtitle1": "16px",
        "subtitle2": "14px",
        "title": "74px",
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
    }
  }
>
  <FormGroup
    label="A required field"
    required={true}
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jTzLTM",
              "isStatic": true,
              "lastClassName": "eCMmlJ",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jTzLTM",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-VigVT",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-VigVT",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
              >
                A required field
                 
                *
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={false}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fjdhpX",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-fjdhpX",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={false}
              placeholder="Test Input"
            >
              <input
                className="c1"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;

exports[`<FormGroup /> renders correctly 1`] = `
.c0 {
  font-size: 14px;
  font-weight: bold;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  margin-bottom: 8px;
  display: block;
}

.c1 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
}

.c1:hover {
  border-color: #949494;
}

.c1:focus {
  border-color: #111111;
}

.c1:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "input": "2px",
      },
      "colours": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": "96px",
        "h2": "60px",
        "h3": "48px",
        "h4": "34px",
        "h5": "24px",
        "h6": "20px",
        "overline": "10px",
        "subtitle1": "16px",
        "subtitle2": "14px",
        "title": "74px",
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
    }
  }
>
  <FormGroup
    label="A Label"
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jTzLTM",
              "isStatic": true,
              "lastClassName": "eCMmlJ",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jTzLTM",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-VigVT",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-VigVT",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
              >
                A Label
                 
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={false}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-fjdhpX",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-fjdhpX",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={false}
              placeholder="Test Input"
            >
              <input
                className="c1"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;
