// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select <Input /> it renders correctly 1`] = `
.c3 {
  font-family: 'sofarsounds-icon-font' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c3:before {
  color: #000000;
}

.c3.icon-facebook:before {
  content: '\\e90d';
}

.c3.icon-instagram:before {
  content: '\\e916';
}

.c3.icon-spotify:before {
  content: '\\e926';
}

.c3.icon-twitter:before {
  content: '\\e92f';
}

.c3.icon-youtube:before {
  content: '\\e935';
}

.c3.icon-facebookOutline:before {
  content: '\\e90b';
}

.c3.icon-instagramOutline:before {
  content: '\\e911';
}

.c3.icon-spotifyOutline:before {
  content: '\\e914';
}

.c3.icon-twitterOutline:before {
  content: '\\e91a';
}

.c3.icon-youtubeOutline:before {
  content: '\\e91b';
}

.c3.icon-caretUp:before {
  content: '\\e921';
}

.c3.icon-caretDown:before {
  content: '\\e906';
}

.c3.icon-caretLeft:before {
  content: '\\e922';
}

.c3.icon-caretRight:before {
  content: '\\e923';
}

.c3.icon-caretCircleDown:before {
  content: '\\e908';
}

.c3.icon-chevronLeft:before {
  content: '\\e917';
}

.c3.icon-chevronRight:before {
  content: '\\e92c';
}

.c3.icon-chevronUp:before {
  content: '\\e92a';
}

.c3.icon-chevronDown:before {
  content: '\\e920';
}

.c3.icon-moveVertical:before {
  content: '\\e919';
}

.c3.icon-check:before {
  content: '\\e927';
}

.c3.icon-checkCircle:before {
  content: '\\e902';
}

.c3.icon-alertCircle:before {
  content: '\\e907';
}

.c3.icon-alertTriangle:before {
  content: '\\e930';
}

.c3.icon-calendar:before {
  content: '\\e901';
}

.c3.icon-time:before {
  content: '\\e929';
}

.c3.icon-timeHand:before {
  content: '\\e928';
}

.c3.icon-byob:before {
  content: '\\e900';
}

.c3.icon-close:before {
  content: '\\e903';
}

.c3.icon-commercial:before {
  content: '\\e904';
}

.c3.icon-disabled:before {
  content: '\\e905';
}

.c3.icon-eye:before {
  content: '\\e909';
}

.c3.icon-video:before {
  content: '\\e90e';
}

.c3.icon-happyMask:before {
  content: '\\e90f';
}

.c3.icon-helpCircleOutline:before {
  content: '\\e912';
}

.c3.icon-ellipsisHorizontal:before {
  content: '\\e918';
}

.c3.icon-no:before {
  content: '\\e91c';
}

.c3.icon-pet:before {
  content: '\\e91d';
}

.c3.icon-readGlasses:before {
  content: '\\e91e';
}

.c3.icon-residential:before {
  content: '\\e91f';
}

.c3.icon-tree:before {
  content: '\\e92b';
}

.c3.icon-heartPulse:before {
  content: '\\e90c';
}

.c3.icon-homeWorld:before {
  content: '\\e910';
}

.c3.icon-travelWorld:before {
  content: '\\e915';
}

.c3.icon-musicTicket:before {
  content: '\\e913';
}

.c3.icon-musicLove:before {
  content: '\\e90a';
}

.c3.icon-plus:before {
  content: '\\e924';
}

.c3.icon-padlock:before {
  content: '\\e925';
}

.c2 {
  -webkit-flex-basis: 50px;
  -ms-flex-preferred-size: 50px;
  flex-basis: 50px;
  border: none;
}

.c2:hover {
  cursor: pointer;
}

.c2:focus {
  border-color: #DBDBDB;
  outline: none;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: center;
  -ms-flex: center;
  flex: center;
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  padding-right: 0px;
}

.c0:hover {
  border-color: #949494;
}

.c0:focus {
  border-color: #111111;
}

.c0:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

.c1 {
  border-right: 0px;
  width: 100%;
  border: 0px;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
}

.c1:hover {
  outline: none;
}

.c1:focus {
  outline: none;
}

.c1::-webkit-input-placeholder {
  color: #949494;
}

.c1::-moz-placeholder {
  color: #949494;
}

.c1:-ms-input-placeholder {
  color: #949494;
}

.c1::placeholder {
  color: #949494;
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
        "large": "8px",
      },
      "colors": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueSmoke": "#949494",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "macyGrey": "#DBDBDB",
        "paintItBlack": "#333333",
        "primary": "#039842",
        "redRedWine": "#EF4423",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
      },
      "dimensions": Object {
        "button": Object {
          "default": Object {
            "height": "44px",
            "padding": "0 25px",
          },
          "small": Object {
            "height": "40px",
            "padding": "0 15px",
          },
        },
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
        "radioBox": "20px",
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": Object {
          "lg": "48px",
          "md": "34px",
          "xs": "24px",
        },
        "h2": Object {
          "lg": "34px",
          "md": "24px",
          "xs": "20px",
        },
        "h3": Object {
          "lg": "24px",
          "md": "20px",
          "xs": "16px",
        },
        "h4": Object {
          "lg": "20px",
          "md": "16px",
          "xs": "16px",
        },
        "h5": Object {
          "lg": "16px",
          "md": "14px",
          "xs": "14px",
        },
        "h6": Object {
          "lg": "14px",
          "md": "14px",
          "xs": "14px",
        },
        "overline": "10px",
        "title": Object {
          "lg": "54px",
          "md": "38px",
          "xs": "26px",
        },
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
      "zIndex": Object {
        "navbar": 100,
      },
    }
  }
>
  <Input
    data-qaid="testDataId"
    isOpen={false}
    placeholder="I am a placeholder"
    readonly={false}
    toggleSelect={[MockFunction]}
  >
    <styled.div
      data-qaid="testDataId"
      isOpen={false}
      onClick={[MockFunction]}
    >
      <StyledComponent
        data-qaid="testDataId"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-ifAKCX",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  ",
                [Function],
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-ifAKCX",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isOpen={false}
        onClick={[MockFunction]}
      >
        <div
          className="c0"
          data-qaid="testDataId"
          onClick={[MockFunction]}
        >
          <styled.input
            data-qaid="testDataId-input"
            isOpen={false}
            placeholder="I am a placeholder"
            readOnly={false}
          >
            <StyledComponent
              data-qaid="testDataId-input"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isOpen={false}
              placeholder="I am a placeholder"
              readOnly={false}
            >
              <input
                className="c1"
                data-qaid="testDataId-input"
                placeholder="I am a placeholder"
                readOnly={false}
              />
            </StyledComponent>
          </styled.input>
          <styled.button
            data-qaid="testDataId-toggle"
            isOpen={false}
            type="button"
          >
            <StyledComponent
              data-qaid="testDataId-toggle"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bxivhb",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
",
                      [Function],
                      "
  }
",
                    ],
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bxivhb",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              isOpen={false}
              type="button"
            >
              <button
                className="c2"
                data-qaid="testDataId-toggle"
                type="button"
              >
                <Icon
                  name="caretDown"
                >
                  <styled.i
                    className="icon-caretDown "
                  >
                    <StyledComponent
                      className="icon-caretDown "
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-htpNat",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "
  ",
                              [Function],
                              "

  ",
                              "
    ",
                              "
      &.icon-facebook:before {
        content: '\\\\e90d';
      }
    
      &.icon-instagram:before {
        content: '\\\\e916';
      }
    
      &.icon-spotify:before {
        content: '\\\\e926';
      }
    
      &.icon-twitter:before {
        content: '\\\\e92f';
      }
    
      &.icon-youtube:before {
        content: '\\\\e935';
      }
    
      &.icon-facebookOutline:before {
        content: '\\\\e90b';
      }
    
      &.icon-instagramOutline:before {
        content: '\\\\e911';
      }
    
      &.icon-spotifyOutline:before {
        content: '\\\\e914';
      }
    
      &.icon-twitterOutline:before {
        content: '\\\\e91a';
      }
    
      &.icon-youtubeOutline:before {
        content: '\\\\e91b';
      }
    
      &.icon-caretUp:before {
        content: '\\\\e921';
      }
    
      &.icon-caretDown:before {
        content: '\\\\e906';
      }
    
      &.icon-caretLeft:before {
        content: '\\\\e922';
      }
    
      &.icon-caretRight:before {
        content: '\\\\e923';
      }
    
      &.icon-caretCircleDown:before {
        content: '\\\\e908';
      }
    
      &.icon-chevronLeft:before {
        content: '\\\\e917';
      }
    
      &.icon-chevronRight:before {
        content: '\\\\e92c';
      }
    
      &.icon-chevronUp:before {
        content: '\\\\e92a';
      }
    
      &.icon-chevronDown:before {
        content: '\\\\e920';
      }
    
      &.icon-moveVertical:before {
        content: '\\\\e919';
      }
    
      &.icon-check:before {
        content: '\\\\e927';
      }
    
      &.icon-checkCircle:before {
        content: '\\\\e902';
      }
    
      &.icon-alertCircle:before {
        content: '\\\\e907';
      }
    
      &.icon-alertTriangle:before {
        content: '\\\\e930';
      }
    
      &.icon-calendar:before {
        content: '\\\\e901';
      }
    
      &.icon-time:before {
        content: '\\\\e929';
      }
    
      &.icon-timeHand:before {
        content: '\\\\e928';
      }
    
      &.icon-byob:before {
        content: '\\\\e900';
      }
    
      &.icon-close:before {
        content: '\\\\e903';
      }
    
      &.icon-commercial:before {
        content: '\\\\e904';
      }
    
      &.icon-disabled:before {
        content: '\\\\e905';
      }
    
      &.icon-eye:before {
        content: '\\\\e909';
      }
    
      &.icon-video:before {
        content: '\\\\e90e';
      }
    
      &.icon-happyMask:before {
        content: '\\\\e90f';
      }
    
      &.icon-helpCircleOutline:before {
        content: '\\\\e912';
      }
    
      &.icon-ellipsisHorizontal:before {
        content: '\\\\e918';
      }
    
      &.icon-no:before {
        content: '\\\\e91c';
      }
    
      &.icon-pet:before {
        content: '\\\\e91d';
      }
    
      &.icon-readGlasses:before {
        content: '\\\\e91e';
      }
    
      &.icon-residential:before {
        content: '\\\\e91f';
      }
    
      &.icon-tree:before {
        content: '\\\\e92b';
      }
    
      &.icon-heartPulse:before {
        content: '\\\\e90c';
      }
    
      &.icon-homeWorld:before {
        content: '\\\\e910';
      }
    
      &.icon-travelWorld:before {
        content: '\\\\e915';
      }
    
      &.icon-musicTicket:before {
        content: '\\\\e913';
      }
    
      &.icon-musicLove:before {
        content: '\\\\e90a';
      }
    
      &.icon-plus:before {
        content: '\\\\e924';
      }
    
      &.icon-padlock:before {
        content: '\\\\e925';
      }
    ",
                              "
  ",
                              ";
",
                            ],
                          },
                          "displayName": "styled.i",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-htpNat",
                          "target": "i",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <i
                        className="c3 icon-caretDown "
                      />
                    </StyledComponent>
                  </styled.i>
                </Icon>
              </button>
            </StyledComponent>
          </styled.button>
        </div>
      </StyledComponent>
    </styled.div>
  </Input>
</ThemeProvider>
`;
