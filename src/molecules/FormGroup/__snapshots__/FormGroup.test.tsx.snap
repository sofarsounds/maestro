// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FormGroup /> applies a hasError prop to the input 1`] = `
.c2 {
  font-size: 10px;
  font-weight: normal;
  -webkit-letter-spacing: 0.3px;
  -moz-letter-spacing: 0.3px;
  -ms-letter-spacing: 0.3px;
  letter-spacing: 0.3px;
  line-height: 1.6;
  margin: 0;
  padding: 0;
  margin-bottom: 0px;
  display: inline-block;
  color: #EF4423;
}

.c2 * {
  color: #EF4423;
}

.c0 {
  font-size: 14px;
  font-weight: 600;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  margin-bottom: 8px;
  display: block;
  color: #EF4423;
}

.c0 * {
  color: #EF4423;
}

.c1 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  border-color: #EF4423;
}

.c1:hover {
  border-color: #949494;
}

.c1:focus {
  border-color: #111111;
}

.c1:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
        "large": "8px",
      },
      "colors": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueChristmas": "#3498DB",
        "blueMagic": "#34495E",
        "blueSmoke": "#949494",
        "brownSugar": "#9B525F",
        "checkBerry": "#98035A",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "greenGarden": "#19BC9B",
        "greenOnions": "#8BC34B",
        "macyGrey": "#DBDBDB",
        "mellowYellow": "#F1C410",
        "orangeCrush": "#F39C12",
        "paintItBlack": "#333333",
        "peaches": "#F99973",
        "pinkTriangle": "#E91E63",
        "primary": "#039842",
        "purpleHaze": "#3F51B5",
        "purplePills": "#9B59B6",
        "redRedWine": "#EF4423",
        "royalBlood": "#FF5000",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
        "yellowSubmarine": "#FFD426",
      },
      "dimensions": Object {
        "button": Object {
          "default": Object {
            "height": "44px",
            "padding": "0 25px",
          },
          "small": Object {
            "height": "40px",
            "padding": "0 15px",
          },
        },
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
        "radioBox": "20px",
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": Object {
          "lg": "48px",
          "md": "34px",
          "xs": "24px",
        },
        "h2": Object {
          "lg": "34px",
          "md": "24px",
          "xs": "20px",
        },
        "h3": Object {
          "lg": "24px",
          "md": "20px",
          "xs": "16px",
        },
        "h4": Object {
          "lg": "20px",
          "md": "16px",
          "xs": "16px",
        },
        "h5": Object {
          "lg": "16px",
          "md": "14px",
          "xs": "14px",
        },
        "h6": Object {
          "lg": "14px",
          "md": "14px",
          "xs": "14px",
        },
        "overline": "10px",
        "title": Object {
          "lg": "54px",
          "md": "38px",
          "xs": "26px",
        },
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
      "zIndex": Object {
        "navbar": 100,
      },
    }
  }
>
  <FormGroup
    errorMsg="Something went wrong"
    label="An error field"
    required={true}
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-VigVT",
              "isStatic": false,
              "lastClassName": "fIhGog",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-VigVT",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span
            color="#EF4423"
            data-qaid="undefined-label"
          >
            <StyledComponent
              color="#EF4423"
              data-qaid="undefined-label"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
                color="#EF4423"
                data-qaid="undefined-label"
              >
                An error field
                <span
                  style={
                    Object {
                      "color": "#EF4423",
                    }
                  }
                >
                  *
                </span>
                 
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={true}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jTzLTM",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jTzLTM",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={true}
              placeholder="Test Input"
            >
              <input
                className="c1"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
          <styled.span
            color="#EF4423"
            data-qaid="undefined-error"
          >
            <StyledComponent
              color="#EF4423"
              data-qaid="undefined-error"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gZMcBi",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gZMcBi",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c2"
                color="#EF4423"
                data-qaid="undefined-error"
              >
                Something went wrong
              </span>
            </StyledComponent>
          </styled.span>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;

exports[`<FormGroup /> renders a error message 1`] = `
.c2 {
  font-size: 10px;
  font-weight: normal;
  -webkit-letter-spacing: 0.3px;
  -moz-letter-spacing: 0.3px;
  -ms-letter-spacing: 0.3px;
  letter-spacing: 0.3px;
  line-height: 1.6;
  margin: 0;
  padding: 0;
  margin-bottom: 0px;
  display: inline-block;
  color: #EF4423;
}

.c2 * {
  color: #EF4423;
}

.c0 {
  font-size: 14px;
  font-weight: 600;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  margin-bottom: 8px;
  display: block;
  color: #EF4423;
}

.c0 * {
  color: #EF4423;
}

.c1 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
  border-color: #EF4423;
}

.c1:hover {
  border-color: #949494;
}

.c1:focus {
  border-color: #111111;
}

.c1:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
        "large": "8px",
      },
      "colors": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueChristmas": "#3498DB",
        "blueMagic": "#34495E",
        "blueSmoke": "#949494",
        "brownSugar": "#9B525F",
        "checkBerry": "#98035A",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "greenGarden": "#19BC9B",
        "greenOnions": "#8BC34B",
        "macyGrey": "#DBDBDB",
        "mellowYellow": "#F1C410",
        "orangeCrush": "#F39C12",
        "paintItBlack": "#333333",
        "peaches": "#F99973",
        "pinkTriangle": "#E91E63",
        "primary": "#039842",
        "purpleHaze": "#3F51B5",
        "purplePills": "#9B59B6",
        "redRedWine": "#EF4423",
        "royalBlood": "#FF5000",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
        "yellowSubmarine": "#FFD426",
      },
      "dimensions": Object {
        "button": Object {
          "default": Object {
            "height": "44px",
            "padding": "0 25px",
          },
          "small": Object {
            "height": "40px",
            "padding": "0 15px",
          },
        },
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
        "radioBox": "20px",
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": Object {
          "lg": "48px",
          "md": "34px",
          "xs": "24px",
        },
        "h2": Object {
          "lg": "34px",
          "md": "24px",
          "xs": "20px",
        },
        "h3": Object {
          "lg": "24px",
          "md": "20px",
          "xs": "16px",
        },
        "h4": Object {
          "lg": "20px",
          "md": "16px",
          "xs": "16px",
        },
        "h5": Object {
          "lg": "16px",
          "md": "14px",
          "xs": "14px",
        },
        "h6": Object {
          "lg": "14px",
          "md": "14px",
          "xs": "14px",
        },
        "overline": "10px",
        "title": Object {
          "lg": "54px",
          "md": "38px",
          "xs": "26px",
        },
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
      "zIndex": Object {
        "navbar": 100,
      },
    }
  }
>
  <FormGroup
    errorMsg="Something went wrong"
    label="An error field"
    required={true}
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-VigVT",
              "isStatic": false,
              "lastClassName": "fIhGog",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-VigVT",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span
            color="#EF4423"
            data-qaid="undefined-label"
          >
            <StyledComponent
              color="#EF4423"
              data-qaid="undefined-label"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
                color="#EF4423"
                data-qaid="undefined-label"
              >
                An error field
                <span
                  style={
                    Object {
                      "color": "#EF4423",
                    }
                  }
                >
                  *
                </span>
                 
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={true}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jTzLTM",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jTzLTM",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={true}
              placeholder="Test Input"
            >
              <input
                className="c1"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
          <styled.span
            color="#EF4423"
            data-qaid="undefined-error"
          >
            <StyledComponent
              color="#EF4423"
              data-qaid="undefined-error"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gZMcBi",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gZMcBi",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c2"
                color="#EF4423"
                data-qaid="undefined-error"
              >
                Something went wrong
              </span>
            </StyledComponent>
          </styled.span>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;

exports[`<FormGroup /> renders a required indicator 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 600;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  margin-bottom: 8px;
  display: block;
}

.c1 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
}

.c1:hover {
  border-color: #949494;
}

.c1:focus {
  border-color: #111111;
}

.c1:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
        "large": "8px",
      },
      "colors": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueChristmas": "#3498DB",
        "blueMagic": "#34495E",
        "blueSmoke": "#949494",
        "brownSugar": "#9B525F",
        "checkBerry": "#98035A",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "greenGarden": "#19BC9B",
        "greenOnions": "#8BC34B",
        "macyGrey": "#DBDBDB",
        "mellowYellow": "#F1C410",
        "orangeCrush": "#F39C12",
        "paintItBlack": "#333333",
        "peaches": "#F99973",
        "pinkTriangle": "#E91E63",
        "primary": "#039842",
        "purpleHaze": "#3F51B5",
        "purplePills": "#9B59B6",
        "redRedWine": "#EF4423",
        "royalBlood": "#FF5000",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
        "yellowSubmarine": "#FFD426",
      },
      "dimensions": Object {
        "button": Object {
          "default": Object {
            "height": "44px",
            "padding": "0 25px",
          },
          "small": Object {
            "height": "40px",
            "padding": "0 15px",
          },
        },
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
        "radioBox": "20px",
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": Object {
          "lg": "48px",
          "md": "34px",
          "xs": "24px",
        },
        "h2": Object {
          "lg": "34px",
          "md": "24px",
          "xs": "20px",
        },
        "h3": Object {
          "lg": "24px",
          "md": "20px",
          "xs": "16px",
        },
        "h4": Object {
          "lg": "20px",
          "md": "16px",
          "xs": "16px",
        },
        "h5": Object {
          "lg": "16px",
          "md": "14px",
          "xs": "14px",
        },
        "h6": Object {
          "lg": "14px",
          "md": "14px",
          "xs": "14px",
        },
        "overline": "10px",
        "title": Object {
          "lg": "54px",
          "md": "38px",
          "xs": "26px",
        },
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
      "zIndex": Object {
        "navbar": 100,
      },
    }
  }
>
  <FormGroup
    label="A required field"
    required={true}
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-VigVT",
              "isStatic": false,
              "lastClassName": "fIhGog",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-VigVT",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span
            data-qaid="undefined-label"
          >
            <StyledComponent
              data-qaid="undefined-label"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
                data-qaid="undefined-label"
              >
                A required field
                <span
                  style={
                    Object {
                      "color": "#039842",
                    }
                  }
                >
                  *
                </span>
                 
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={false}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jTzLTM",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jTzLTM",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={false}
              placeholder="Test Input"
            >
              <input
                className="c1"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;

exports[`<FormGroup /> renders a with an Icon 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 600;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  margin-bottom: 8px;
  display: block;
}

.c2 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
}

.c2:hover {
  border-color: #949494;
}

.c2:focus {
  border-color: #111111;
}

.c2:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

.c1 {
  font-family: 'sofarsounds-icon-font' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c1:before {
  color: #000000;
}

.c1.icon-facebook:before {
  content: '\\e90d';
}

.c1.icon-instagram:before {
  content: '\\e916';
}

.c1.icon-spotify:before {
  content: '\\e926';
}

.c1.icon-twitter:before {
  content: '\\e92f';
}

.c1.icon-youtube:before {
  content: '\\e935';
}

.c1.icon-facebookOutline:before {
  content: '\\e90b';
}

.c1.icon-instagramOutline:before {
  content: '\\e911';
}

.c1.icon-spotifyOutline:before {
  content: '\\e914';
}

.c1.icon-twitterOutline:before {
  content: '\\e91a';
}

.c1.icon-youtubeOutline:before {
  content: '\\e91b';
}

.c1.icon-caretUp:before {
  content: '\\e921';
}

.c1.icon-caretDown:before {
  content: '\\e906';
}

.c1.icon-caretLeft:before {
  content: '\\e922';
}

.c1.icon-caretRight:before {
  content: '\\e923';
}

.c1.icon-caretCircleDown:before {
  content: '\\e908';
}

.c1.icon-chevronLeft:before {
  content: '\\e917';
}

.c1.icon-chevronRight:before {
  content: '\\e92c';
}

.c1.icon-chevronUp:before {
  content: '\\e92a';
}

.c1.icon-chevronDown:before {
  content: '\\e920';
}

.c1.icon-moveVertical:before {
  content: '\\e919';
}

.c1.icon-check:before {
  content: '\\e927';
}

.c1.icon-checkCircle:before {
  content: '\\e902';
}

.c1.icon-alertCircle:before {
  content: '\\e907';
}

.c1.icon-alertTriangle:before {
  content: '\\e930';
}

.c1.icon-calendar:before {
  content: '\\e901';
}

.c1.icon-time:before {
  content: '\\e929';
}

.c1.icon-timeHand:before {
  content: '\\e928';
}

.c1.icon-calendarAdd:before {
  content: '\\e92d';
}

.c1.icon-byob:before {
  content: '\\e900';
}

.c1.icon-close:before {
  content: '\\e903';
}

.c1.icon-commercial:before {
  content: '\\e904';
}

.c1.icon-disabled:before {
  content: '\\e905';
}

.c1.icon-eye:before {
  content: '\\e909';
}

.c1.icon-video:before {
  content: '\\e90e';
}

.c1.icon-happyMask:before {
  content: '\\e90f';
}

.c1.icon-helpCircleOutline:before {
  content: '\\e912';
}

.c1.icon-ellipsisHorizontal:before {
  content: '\\e918';
}

.c1.icon-no:before {
  content: '\\e91c';
}

.c1.icon-pet:before {
  content: '\\e91d';
}

.c1.icon-readGlasses:before {
  content: '\\e91e';
}

.c1.icon-residential:before {
  content: '\\e91f';
}

.c1.icon-tree:before {
  content: '\\e92b';
}

.c1.icon-heartPulse:before {
  content: '\\e90c';
}

.c1.icon-homeWorld:before {
  content: '\\e910';
}

.c1.icon-travelWorld:before {
  content: '\\e915';
}

.c1.icon-musicTicket:before {
  content: '\\e913';
}

.c1.icon-musicLove:before {
  content: '\\e90a';
}

.c1.icon-plus:before {
  content: '\\e924';
}

.c1.icon-padlock:before {
  content: '\\e925';
}

.c1.icon-search:before {
  content: '\\e830';
}

.c1.icon-music:before {
  content: '\\e932';
}

.c1.icon-mail:before {
  content: '\\e931';
}

.c1.icon-expandHorizontal:before {
  content: '\\e92e';
}

.c1.icon-reset:before {
  content: '\\e936';
}

.c1.icon-pencil:before {
  content: '\\e934';
}

.c1.icon-arrowUp:before {
  content: '\\e933';
}

.c1.icon-arrowLeft:before {
  content: '\\e93b';
}

.c1.icon-infoOutline:before {
  content: '\\e93a';
}

.c1.icon-feedbackOutline:before {
  content: '\\e939';
}

.c1.icon-mediaOutline:before {
  content: '\\e938';
}

.c1.icon-concertOutline:before {
  content: '\\e937';
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
        "large": "8px",
      },
      "colors": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueChristmas": "#3498DB",
        "blueMagic": "#34495E",
        "blueSmoke": "#949494",
        "brownSugar": "#9B525F",
        "checkBerry": "#98035A",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "greenGarden": "#19BC9B",
        "greenOnions": "#8BC34B",
        "macyGrey": "#DBDBDB",
        "mellowYellow": "#F1C410",
        "orangeCrush": "#F39C12",
        "paintItBlack": "#333333",
        "peaches": "#F99973",
        "pinkTriangle": "#E91E63",
        "primary": "#039842",
        "purpleHaze": "#3F51B5",
        "purplePills": "#9B59B6",
        "redRedWine": "#EF4423",
        "royalBlood": "#FF5000",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
        "yellowSubmarine": "#FFD426",
      },
      "dimensions": Object {
        "button": Object {
          "default": Object {
            "height": "44px",
            "padding": "0 25px",
          },
          "small": Object {
            "height": "40px",
            "padding": "0 15px",
          },
        },
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
        "radioBox": "20px",
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": Object {
          "lg": "48px",
          "md": "34px",
          "xs": "24px",
        },
        "h2": Object {
          "lg": "34px",
          "md": "24px",
          "xs": "20px",
        },
        "h3": Object {
          "lg": "24px",
          "md": "20px",
          "xs": "16px",
        },
        "h4": Object {
          "lg": "20px",
          "md": "16px",
          "xs": "16px",
        },
        "h5": Object {
          "lg": "16px",
          "md": "14px",
          "xs": "14px",
        },
        "h6": Object {
          "lg": "14px",
          "md": "14px",
          "xs": "14px",
        },
        "overline": "10px",
        "title": Object {
          "lg": "54px",
          "md": "38px",
          "xs": "26px",
        },
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
      "zIndex": Object {
        "navbar": 100,
      },
    }
  }
>
  <FormGroup
    label="A required field"
    renderIcon={[Function]}
    required={true}
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-VigVT",
              "isStatic": false,
              "lastClassName": "fIhGog",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-VigVT",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span
            data-qaid="undefined-label"
          >
            <StyledComponent
              data-qaid="undefined-label"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
                data-qaid="undefined-label"
              >
                A required field
                <span
                  style={
                    Object {
                      "color": "#039842",
                    }
                  }
                >
                  *
                </span>
                 
                <Icon
                  name="helpCircleOutline"
                >
                  <styled.i
                    className="icon-helpCircleOutline "
                  >
                    <StyledComponent
                      className="icon-helpCircleOutline "
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-fjdhpX",
                            "isStatic": false,
                            "lastClassName": "c1",
                            "rules": Array [
                              "
  ",
                              [Function],
                              "

  ",
                              "
    ",
                              "
      &.icon-facebook:before {
        content: '\\\\e90d';
      }
    
      &.icon-instagram:before {
        content: '\\\\e916';
      }
    
      &.icon-spotify:before {
        content: '\\\\e926';
      }
    
      &.icon-twitter:before {
        content: '\\\\e92f';
      }
    
      &.icon-youtube:before {
        content: '\\\\e935';
      }
    
      &.icon-facebookOutline:before {
        content: '\\\\e90b';
      }
    
      &.icon-instagramOutline:before {
        content: '\\\\e911';
      }
    
      &.icon-spotifyOutline:before {
        content: '\\\\e914';
      }
    
      &.icon-twitterOutline:before {
        content: '\\\\e91a';
      }
    
      &.icon-youtubeOutline:before {
        content: '\\\\e91b';
      }
    
      &.icon-caretUp:before {
        content: '\\\\e921';
      }
    
      &.icon-caretDown:before {
        content: '\\\\e906';
      }
    
      &.icon-caretLeft:before {
        content: '\\\\e922';
      }
    
      &.icon-caretRight:before {
        content: '\\\\e923';
      }
    
      &.icon-caretCircleDown:before {
        content: '\\\\e908';
      }
    
      &.icon-chevronLeft:before {
        content: '\\\\e917';
      }
    
      &.icon-chevronRight:before {
        content: '\\\\e92c';
      }
    
      &.icon-chevronUp:before {
        content: '\\\\e92a';
      }
    
      &.icon-chevronDown:before {
        content: '\\\\e920';
      }
    
      &.icon-moveVertical:before {
        content: '\\\\e919';
      }
    
      &.icon-check:before {
        content: '\\\\e927';
      }
    
      &.icon-checkCircle:before {
        content: '\\\\e902';
      }
    
      &.icon-alertCircle:before {
        content: '\\\\e907';
      }
    
      &.icon-alertTriangle:before {
        content: '\\\\e930';
      }
    
      &.icon-calendar:before {
        content: '\\\\e901';
      }
    
      &.icon-time:before {
        content: '\\\\e929';
      }
    
      &.icon-timeHand:before {
        content: '\\\\e928';
      }
    
      &.icon-calendarAdd:before {
        content: '\\\\e92d';
      }
    
      &.icon-byob:before {
        content: '\\\\e900';
      }
    
      &.icon-close:before {
        content: '\\\\e903';
      }
    
      &.icon-commercial:before {
        content: '\\\\e904';
      }
    
      &.icon-disabled:before {
        content: '\\\\e905';
      }
    
      &.icon-eye:before {
        content: '\\\\e909';
      }
    
      &.icon-video:before {
        content: '\\\\e90e';
      }
    
      &.icon-happyMask:before {
        content: '\\\\e90f';
      }
    
      &.icon-helpCircleOutline:before {
        content: '\\\\e912';
      }
    
      &.icon-ellipsisHorizontal:before {
        content: '\\\\e918';
      }
    
      &.icon-no:before {
        content: '\\\\e91c';
      }
    
      &.icon-pet:before {
        content: '\\\\e91d';
      }
    
      &.icon-readGlasses:before {
        content: '\\\\e91e';
      }
    
      &.icon-residential:before {
        content: '\\\\e91f';
      }
    
      &.icon-tree:before {
        content: '\\\\e92b';
      }
    
      &.icon-heartPulse:before {
        content: '\\\\e90c';
      }
    
      &.icon-homeWorld:before {
        content: '\\\\e910';
      }
    
      &.icon-travelWorld:before {
        content: '\\\\e915';
      }
    
      &.icon-musicTicket:before {
        content: '\\\\e913';
      }
    
      &.icon-musicLove:before {
        content: '\\\\e90a';
      }
    
      &.icon-plus:before {
        content: '\\\\e924';
      }
    
      &.icon-padlock:before {
        content: '\\\\e925';
      }
    
      &.icon-search:before {
        content: '\\\\e830';
      }
    
      &.icon-music:before {
        content: '\\\\e932';
      }
    
      &.icon-mail:before {
        content: '\\\\e931';
      }
    
      &.icon-expandHorizontal:before {
        content: '\\\\e92e';
      }
    
      &.icon-reset:before {
        content: '\\\\e936';
      }
    
      &.icon-pencil:before {
        content: '\\\\e934';
      }
    
      &.icon-arrowUp:before {
        content: '\\\\e933';
      }
    
      &.icon-arrowLeft:before {
        content: '\\\\e93b';
      }
    
      &.icon-infoOutline:before {
        content: '\\\\e93a';
      }
    
      &.icon-feedbackOutline:before {
        content: '\\\\e939';
      }
    
      &.icon-mediaOutline:before {
        content: '\\\\e938';
      }
    
      &.icon-concertOutline:before {
        content: '\\\\e937';
      }
    ",
                              "
  ",
                              ";
",
                            ],
                          },
                          "displayName": "styled.i",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-fjdhpX",
                          "target": "i",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <i
                        className="c1 icon-helpCircleOutline "
                      />
                    </StyledComponent>
                  </styled.i>
                </Icon>
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={false}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jTzLTM",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jTzLTM",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={false}
              placeholder="Test Input"
            >
              <input
                className="c2"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;

exports[`<FormGroup /> renders correctly 1`] = `
.c0 {
  font-size: 14px;
  font-weight: 600;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  margin-bottom: 8px;
  display: block;
}

.c1 {
  width: 100%;
  height: 44px;
  background-color: #FFFFFF;
  border-radius: 2px;
  border: 1px solid #DBDBDB;
  padding: 0 16px;
  outline: none;
  box-shadow: none;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  font-size: 14px;
  -webkit-letter-spacing: 0.1px;
  -moz-letter-spacing: 0.1px;
  -ms-letter-spacing: 0.1px;
  letter-spacing: 0.1px;
  color: #111111;
}

.c1:hover {
  border-color: #949494;
}

.c1:focus {
  border-color: #111111;
}

.c1:disabled {
  color: #DBDBDB;
  border-color: #DBDBDB;
}

<ThemeProvider
  theme={
    Object {
      "borderRadius": Object {
        "button": "4px",
        "default": "2px",
        "input": "2px",
        "large": "8px",
      },
      "colors": Object {
        "backToBlack": "#111111",
        "black": "#000000",
        "blackBetty": "#1E1E1E",
        "blueChristmas": "#3498DB",
        "blueMagic": "#34495E",
        "blueSmoke": "#949494",
        "brownSugar": "#9B525F",
        "checkBerry": "#98035A",
        "green100": "#CFEACC",
        "green200": "#9DDCAC",
        "green300": "#72D08A",
        "green400": "#4FC571",
        "green50": "#E6F7EA",
        "green500": "#23BA57",
        "green600": "#10AD52",
        "green700": "#039842",
        "green800": "#008736",
        "green900": "#006721",
        "greenGarden": "#19BC9B",
        "greenOnions": "#8BC34B",
        "macyGrey": "#DBDBDB",
        "mellowYellow": "#F1C410",
        "orangeCrush": "#F39C12",
        "paintItBlack": "#333333",
        "peaches": "#F99973",
        "pinkTriangle": "#E91E63",
        "primary": "#039842",
        "purpleHaze": "#3F51B5",
        "purplePills": "#9B59B6",
        "redRedWine": "#EF4423",
        "royalBlood": "#FF5000",
        "silverSprings": "#F5F5F5",
        "whiteDenim": "#FFFFFF",
        "yellowSubmarine": "#FFD426",
      },
      "dimensions": Object {
        "button": Object {
          "default": Object {
            "height": "44px",
            "padding": "0 25px",
          },
          "small": Object {
            "height": "40px",
            "padding": "0 15px",
          },
        },
        "buttonHeight": "44px",
        "containerWidth": Object {
          "default": "800px",
          "fullscreen": "100%",
          "large": "1000px",
          "small": "600px",
        },
        "inputHeight": "44px",
        "navbarHeight": Object {
          "lg": "84px",
          "md": "74px",
          "xs": "62px",
        },
        "radioBox": "20px",
      },
      "fontSizes": Object {
        "base": "16px",
        "body1": "16px",
        "body2": "14px",
        "button": "14px",
        "caption": "10px",
        "formGroupLabel": "14px",
        "h1": Object {
          "lg": "48px",
          "md": "34px",
          "xs": "24px",
        },
        "h2": Object {
          "lg": "34px",
          "md": "24px",
          "xs": "20px",
        },
        "h3": Object {
          "lg": "24px",
          "md": "20px",
          "xs": "16px",
        },
        "h4": Object {
          "lg": "20px",
          "md": "16px",
          "xs": "16px",
        },
        "h5": Object {
          "lg": "16px",
          "md": "14px",
          "xs": "14px",
        },
        "h6": Object {
          "lg": "14px",
          "md": "14px",
          "xs": "14px",
        },
        "overline": "10px",
        "title": Object {
          "lg": "54px",
          "md": "38px",
          "xs": "26px",
        },
      },
      "fonts": Object {
        "regular": "Open Sans",
      },
      "media": Object {
        "lg": [Function],
        "md": [Function],
        "sm": [Function],
        "xl": [Function],
        "xs": [Function],
      },
      "ruler": Array [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56,
        60,
        64,
        68,
        72,
        76,
        80,
      ],
      "utils": Object {
        "transition": [Function],
      },
      "zIndex": Object {
        "navbar": 100,
      },
    }
  }
>
  <FormGroup
    label="A Label"
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-VigVT",
              "isStatic": false,
              "lastClassName": "fIhGog",
              "rules": Array [],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-VigVT",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className=""
        >
          <styled.span
            data-qaid="undefined-label"
          >
            <StyledComponent
              data-qaid="undefined-label"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-gqjmRU",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  ",
                      [Function],
                      "

  ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-gqjmRU",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c0"
                data-qaid="undefined-label"
              >
                A Label
                 
              </span>
            </StyledComponent>
          </styled.span>
          <styled.input
            hasError={false}
            placeholder="Test Input"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-jTzLTM",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-jTzLTM",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              hasError={false}
              placeholder="Test Input"
            >
              <input
                className="c1"
                placeholder="Test Input"
              />
            </StyledComponent>
          </styled.input>
        </div>
      </StyledComponent>
    </styled.div>
  </FormGroup>
</ThemeProvider>
`;
